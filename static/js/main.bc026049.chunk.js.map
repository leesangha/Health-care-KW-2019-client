{"version":3,"sources":["components/SignUp.js","components/Login.js","components/getUserNumber.ts","components/getFoodName.ts","components/Home/Food.tsx","components/Home/foodListSort.ts","components/Home/Recommendation.tsx","components/Home/DateAnalytic.tsx","components/Header.js","routes/Home.js","components/Register/RegisterWelcome.tsx","components/Autocom.js","components/Register/AnalysisResultList.tsx","components/Register/FoodAnalysis.tsx","components/Register/FileUpload.tsx","components/Register/FoodHistory.tsx","components/Register/UserFoodHistory.tsx","routes/Register.tsx","components/Result.js","components/Slider.js","components/Picture.js","components/Random.js","components/Research.js","routes/Statistics.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["SignUp","history","useState","name","address","password","age","sex","inputs","setInputs","nameRef","useRef","addressRef","passwordRef","ageRef","buttonRef","onChange","useCallback","e","target","value","console","log","current","style","backgroundColor","useEffect","sessionStorage","getItem","push","className","src","alt","placeholder","id","ref","type","RadioGroup","aria-label","FormControlLabel","control","Radio","onClick","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","data","text","setItem","user_no","Login","setLog","isLoading","setLoading","idReference","passwordReference","buttonReference","isSuccess","errorMessage","Boolean","err","innerHTML","user","catch","error","to","getUserNumber","userInfo","parse","getFoodInfo","Promise","resolve","reject","getFoodName","foodNumber","a","foodInfo","_foodInfo","result","food_name","init","Food","imageSrc","mouseOver","setMouseOver","foodName","setFoodName","info","userNumber","onMouseOver","onMouseOut","size","color","icon","faGrinHearts","faTired","quickSort","list","left","right","length","mid","Math","floor","pivot","divide","swap","partition","fetchPreference","req","fetchLoss","Recommendation","foodList","setFoodList","predictData","all","preference","loss","map","food_no","predicted_preference","sorted","foodListSort","predicted","undefined","imgSrcList","i","imgSrc","index","key","getFoodImage","getNutritionRecommended","recommendedNutrition","Object","values","getNutritionIntake","v","round","DateAnalytic","intake","setIntake","ratio","setRatio","nutritionList","fetchData","nutritionIntake","_ratio","arg","elementsStyle","nutrition","htmlElement","document","getElementById","width","toString","Header","faUserCircle","clear","Home","isLogin","RegisterWelcome","Autocom","props","food","source","faSearch","inputProps","height","borderRadius","borderColor","fontSize","paddingLeft","items","wrapperStyle","display","alignItems","justifyContent","menuStyle","boxShadow","background","boxSizing","padding","position","overflow","minWidth","maxHeight","shouldItemRender","item","toLowerCase","indexOf","getItemValue","renderItem","highlighted","onSelect","AnalysisResultList","State","_result","labels","setLabels","convertLabel","label","includes","Error","_labels","foodNames","FoodAnalysis","preview","WAITING","state","setState","NOT_FOOD","SUCCESS","LOADING","FileUpload","setUploadState","file","previewURL","setPreview","prediction","setPrediction","register","regInfo","onSubmit","preventDefault","formData","FormData","append","img","files","encType","accept","reader","FileReader","onloadend","readAsDataURL","FoodImages","FoodHistory","date","slice","UserFoodHistory","uploadState","userImageList","setUserImageList","getUserFoodHistory","reverse","Register","useMemo","isUpload","Item","onRemove","k","Button","Result","marks","DiscreteSlider","setScore","Typography","gutterBottom","Slider","defaultValue","aria-labelledby","step","max","min","valueLabelDisplay","onChangeCommitted","Picture","number","score","random","Random","num","setNum","Research","search","isSearch","string","correct","arr","elem","variant","temp","join","concat","elems","filter","Statistics","user_name","states","setStates","날짜","datasets","borderWidth","열량","탄수화물","hello","getElementsByClassName","class","for","options","responsive","title","legend","scales","xAxes","gridLines","yAxes","drawBorder","ticks","showValue","fontStyle","Helmet","App","exact","path","render","component","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","URL","process","href","origin","addEventListener","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"ulBAkIeA,MA5Hf,YAA8B,IAAZC,EAAW,EAAXA,QAAW,EACCC,mBAAS,CACnCC,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,IAAK,GACLC,IAAK,WANoB,mBACpBC,EADoB,KACZC,EADY,KAQnBN,EAAqCK,EAArCL,KAAMC,EAA+BI,EAA/BJ,QAASC,EAAsBG,EAAtBH,SAAUC,EAAYE,EAAZF,IAAIC,EAAQC,EAARD,IAE/BG,EAAQC,mBACRC,EAAWD,mBACXE,EAAYF,mBACZG,EAAOH,mBACPI,EAAUJ,mBAEVK,EAAWC,uBACf,SAACC,GAAO,IAAD,EACmBA,EAAEC,OAAlBhB,EADH,EACGA,KAAMiB,EADT,EACSA,MACdC,QAAQC,IAAIF,GACZX,EAAU,eACLD,EADI,eAENL,EAAOiB,KAEPV,EAAQa,QAAQH,OAASR,EAAWW,QAAQH,OAC1CP,EAAYU,QAAQH,OAASN,EAAOS,QAAQH,QAE/CL,EAAUQ,QAAQC,MAAMC,gBAAgB,aAG5C,CAACjB,IA2CH,OAPAkB,qBAAU,WACQC,eAAeC,QAAQ,YAErC3B,EAAQ4B,KAAK,OAEd,CAAC5B,IAGA,yBAAK6B,UAAW,eACZ,yBAAKA,UAAW,oBAChB,yBAAKC,IAAI,wBAAwBC,IAAI,wBACrC,2BACE7B,KAAK,OACL8B,YAAY,OACZjB,SAAUA,EACVI,MAAOjB,EACP+B,GAAK,OACLC,IAAKzB,IAEP,2BACEP,KAAK,UACL8B,YAAY,UACZjB,SAAUA,EACVI,MAAOhB,EACP8B,GAAK,UACLC,IAAKvB,IAEP,2BACET,KAAK,WACL8B,YAAY,WACZjB,SAAUA,EACVI,MAAOf,EACP+B,KAAM,WACNF,GAAK,WACLC,IAAKtB,IAEP,2BACCV,KAAK,MACL8B,YAAY,MACZjB,SAAUA,EACVI,MAAOd,EACP4B,GAAK,MACLC,IAAKrB,IAER,yBAAKgB,UAAU,aACR,kBAACO,EAAA,EAAD,CAAYC,aAAW,SAASJ,GAAK,SAAS/B,KAAK,MAAMiB,MAAOb,EAAKS,SAAUA,GAC7E,kDADF,UAEG,kBAACuB,EAAA,EAAD,CAAmBL,GAAI,MAAMd,MAAM,SAAKoB,QAAS,kBAACC,EAAA,EAAD,QAFpD,UAGG,kBAACF,EAAA,EAAD,CAAmBL,GAAI,MAAMd,MAAM,SAAKoB,QAAS,kBAACC,EAAA,EAAD,UAI7D,4BAAQN,IAAMpB,EAAW2B,QA3Eb,WACdC,MAAM,WAAY,CAChBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUvC,GACrBwC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLhC,QAAQC,IAAI+B,EAAKC,MACC,YAAdD,EAAKC,MArBb7C,EAAU,CACRN,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,IAAK,GACLC,IAAK,KAkBDN,EAAQ4B,KAAK,OAGbF,eAAe4B,QAAQ,SAASF,EAAKG,SACrCvD,EAAQ4B,KAAK,mBAyDjB,mB,iBCVS4B,MA9Gf,YAAqC,IAApBxD,EAAmB,EAAnBA,QAASyD,EAAU,EAAVA,OAAU,EACNxD,mBAAS,CACnCgC,GAAI,GACJ7B,SAAU,KAHsB,mBAC3BG,EAD2B,KACnBC,EADmB,KAK1ByB,EAAiB1B,EAAjB0B,GAAI7B,EAAaG,EAAbH,SALsB,EAMFH,oBAAS,GANP,mBAM3ByD,EAN2B,KAMhBC,EANgB,KAQ5B5C,EAAWC,uBACf,SAACC,GAAO,IAAD,EACmBA,EAAEC,OAAlBhB,EADH,EACGA,KAAMiB,EADT,EACSA,MACdX,EAAU,eACLD,EADI,eAENL,EAAOiB,KAENyC,EAAYtC,QAAQH,OAAS0C,EAAkBvC,QAAQH,QACzD2C,EAAgBxC,QAAQC,MAAMC,gBAAkB,aAGpD,CAACjB,IAGGwD,EAAY,WAChBvD,EAAU,CACRyB,GAAI,GACJ7B,SAAU,MAwCRwD,EAAclD,mBACdmD,EAAoBnD,mBACpBoD,EAAkBpD,mBAClBsD,EAAetD,mBASrB,OAPAe,qBAAU,WACQwC,QAAQvC,eAAeC,QAAQ,aAE7C3B,EAAQ4B,KAAK,OAEd,CAAC5B,IAGF,yBAAK6B,UAAU,cACb,yBAAKA,UAAU,cACf,yBAAKA,UAAU,mBACb,yBAAKC,IAAI,wBAAwBC,IAAI,wBACrC,2BACE7B,KAAK,KACL8B,YAAY,qBACZjB,SAAUA,EACVI,MAAOc,EACPC,IAAK0B,IAEP,2BACE1D,KAAK,WACL8B,YAAY,2BACZG,KAAK,WACLpB,SAAUA,EACVI,MAAOf,EACP8B,IAAK2B,IAEP,yBAAKhC,UAAU,gBAAgBK,IAAK8B,IACpC,4BAAQvB,QArEE,WACdkB,GAAW,GACXjB,MAAM,iBAAkB,CACtBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUvC,GACrBwC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAEY,UAAbA,EAAKc,KACPP,GAAW,GACXG,EAAgBxC,QAAQC,MAAMC,gBAAkB,UAChDwC,EAAa1C,QAAQ6C,UACnB,oHACFJ,MAEArC,eAAe4B,QAAQ,OAAQT,KAAKC,UAAUM,EAAKgB,OACnD1C,eAAe4B,QAAQ,UAAW,QAElClC,QAAQC,IAAI,iBACZoC,GAAO,GACPzD,EAAQ4B,KAAK,SAGhByC,OAAM,SAACH,GACN9C,QAAQkD,MAAMJ,GACdP,GAAW,GACXG,EAAgBxC,QAAQC,MAAMC,gBAAkB,UAChDwC,EAAa1C,QAAQ6C,UAAY,wEACjCJ,QAoC0B7B,IAAK4B,GAC3BJ,EAAoB,yBAAK7B,UAAU,WAAvB,sBAEhB,yBAAKA,UAAU,WAAf,gBACA,yBAAKA,UAAU,cAAf,qDAEE,kBAAC,IAAD,CAAM0C,GAAG,UAAT,iC,mFC5GK,SAASC,IACtB,IAAMC,EAA0B/C,eAAeC,QAAQ,QAEvD,OAAoB,OAAb8C,GAAqB,EAAI5B,KAAK6B,MAAMD,GAAU,GAAGlB,QCC1D,SAASoB,IACP,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BpC,MAAM,aAAc,CAClBC,OAAQ,OACRI,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAACC,GAAD,OAAmBA,EAAIC,UAC5BF,MAAK,SAACG,GACL1B,eAAe4B,QAAQ,WAAYT,KAAKC,UAAUM,IAClDyB,EAAQzB,MAETiB,OAAM,SAACH,GAAD,OAAgBY,EAAOZ,SAIrB,SAAea,EAA9B,kC,4CAAe,WAA2BC,GAA3B,mBAAAC,EAAA,yDAGE,QAFTC,EAAWxD,eAAeC,QAAQ,aAD3B,gCAGegD,IAHf,8CAG+B9B,KAAK6B,MAAMQ,GAH1C,cAEPC,EAFO,iCAKNA,EAAUC,OAAOJ,UALX,aAKN,EAA8BK,WALxB,6C,sBCVf,IAAMC,EAAO,CACX3C,OAAQ,OACRI,QAAS,CACP,eAAgB,mBAChBC,OAAQ,qBA2EGuC,MAvEf,YAAoD,IAApCC,EAAmC,EAAnCA,SAAUR,EAAyB,EAAzBA,WAAyB,EAEf/E,oBAAkB,GAFH,mBAE1CwF,EAF0C,KAE/BC,EAF+B,OAGjBzF,qBAHiB,mBAG1C0F,EAH0C,KAGhCC,EAHgC,KAI3CC,EAAO,CACXC,WAAYtB,IACZQ,cAgCF,OANAvD,qBAAU,WACRsD,EAAYC,GACT/B,MAAK,SAAAC,GAAG,OAAI0C,EAAY1C,MACxBmB,OAAM,SAAApD,GAAC,OAAIG,QAAQkD,MAAMrD,QAC3B,CAAC+D,IAGF,yBAAKnD,UAAU,kBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,OACZ4D,EAAY,2BAAIE,GAAgB,KACjC,yBACE7D,IAAK0D,EACLzD,IAAI,YACJgE,YAAa,kBAAML,GAAa,IAChCM,WAAY,kBAAMN,GAAa,MAEjC,6BACE,4BAAQ7D,UAAU,cAAcY,QAzC7B,WACXC,MAAM,aAAD,eACA4C,EADA,CAEH1C,KAAMC,KAAKC,UAAU+C,MAEpB5C,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLhC,QAAQC,IAAI,yCAmCN,kBAAC,IAAD,CACE4E,KAAK,KACLC,MAAM,mBACNC,KAAMC,OAGV,4BAAQvE,UAAU,iBAAiBY,QArC7B,WAEdC,MAAM,gBAAD,eACA4C,EADA,CAEH1C,KAAMC,KAAKC,UAAU+C,MAEpB5C,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLhC,QAAQC,IAAI,yCA8BN,kBAAC,IAAD,CACE4E,KAAK,KACLC,MAAM,mBACNC,KAAME,Y,QC5EtB,SAASC,EAAUC,GAA0E,IAA1DC,EAAyD,uDAAlD,EAAGC,EAA+C,uDAAvCF,EAAKG,OAAS,EACjE,KAAIF,GAAQC,GAAZ,CAEA,IAAME,EAAMC,KAAKC,OAAOL,EAAOC,GAAS,GAClCK,EAAQP,EAAKI,GAAKvB,OAClB2B,EAAS,SACbR,EACAC,EACAC,EACAK,GAEA,KAAON,GAAQC,GAAO,CACpB,KAAOF,EAAKC,GAAMpB,OAAS0B,GACzBN,IAEF,KAAOD,EAAKE,GAAOrB,OAAS0B,GAC1BL,IAEF,GAAID,GAAQC,EAAO,CACjB,IAAIO,EAAOT,EAAKC,GAChBD,EAAKC,GAAQD,EAAKE,GAClBF,EAAKE,GAASO,EACdR,IACAC,KAGJ,OAAOD,GAEHS,EAAYF,EAAOR,EAAMC,EAAMC,EAAOK,GAK5C,OAHAR,EAAUC,EAAMC,EAAMS,EAAY,GAClCX,EAAUC,EAAMU,EAAWR,GAEpBF,GCpBT,IAAMjB,EAAO,CACX3C,OAAQ,OACRI,QAAS,CACP,eAAgB,mBAChBC,OAAQ,qBAIZ,SAASkE,EAAgBpB,GACvB,OAAO,IAAIlB,SAAQ,SAACC,EAASC,GAC3BpC,MAAM,2BAAD,eACA4C,EADA,CAEH1C,KAAMC,KAAKC,UAAU,CAAEgD,kBAEtB7C,MAAK,SAACkE,GAAD,OAASA,EAAIhE,UAClBF,MAAK,SAACG,GAAD,OAAoByB,EAAQzB,MACjCiB,OAAM,SAACH,GAAD,OAASY,EAAOZ,SAI7B,SAASkD,EAAUtB,GACjB,OAAO,IAAIlB,SAAQ,SAACC,EAASC,GAC3BpC,MAAM,qBAAD,eACA4C,EADA,CAEH1C,KAAMC,KAAKC,UAAU,CAAEgD,kBAEtB7C,MAAK,SAACkE,GAAD,OAAmBA,EAAIhE,UAC5BF,MAAK,SAACG,GAAD,OAAoByB,EAAQzB,MACjCiB,OAAM,SAACH,GAAD,OAASY,EAAOZ,SAkDdmD,MAzCf,WAA2B,IAAD,EACQpH,qBADR,mBACjBqH,EADiB,KACPC,EADO,KAGlBC,EAAcxG,sBAAW,uCAAC,WAAO8E,GAAP,6BAAAb,EAAA,sEACGL,QAAQ6C,IAAI,CAC3CP,EAAgBpB,GAChBsB,EAAUtB,KAHkB,mCACvB4B,EADuB,KACXC,EADW,KAMxBvC,EAASsC,EAAWE,KAAI,gBAAGC,EAAH,EAAGA,QAAH,MAAwC,CACpEA,UACAzC,OAF4B,EAAY0C,qBAETH,EAAKE,OAEhCE,EAASC,EAAa5C,GAC5BhE,QAAQC,IAAI0G,GACNE,EAZwB,UAYUD,EAAa5C,UAZvB,aAYU,EAAsBwC,KAC5D,qBAAGC,WAELN,EAAYU,GAfkB,4CAAD,sDAgB5B,IAUH,OARAxG,qBAAU,WACR,IAAMqE,EAAatB,KACC,IAAhBsB,GACF0B,EAAY1B,GACTzB,OAAM,SAAAH,GAAG,OAAI9C,QAAQkD,MAAMJ,QAE/B,CAACsD,SAEgBU,IAAbZ,EACL,yBAAKzF,UAAU,UACb,kBAAC,eAAD,CAAcoE,KAAM,GAAIC,MAAO,aAGjC,6BAASrE,UAAU,kBACjB,8EAnFN,SAAsByF,GAEpB,IADA,IAAIa,EAAuB,GAClBC,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,IAAMC,EAAM,uCAAmCf,EAASc,GAA5C,QACZD,EAAWvG,KAAKyG,GAElB,OAAOF,EAAWP,KAAI,SAAC9F,EAAawG,GAAd,OACpB,kBAAC,EAAD,CAAMC,IAAKzG,EAAK0D,SAAU1D,EAAKkD,WAAYsC,EAASgB,QA6EjDE,CAAalB,K,OCtFpB,SAASmB,IACP,IAAMC,EAAsChH,eAAeC,QAAQ,yBAC7DmE,EAAatB,IAEnB,OACI,IAAII,QADwB,OAAzB8D,EACS,SAAC7D,EAASC,GACpBpC,MAAM,sBAAuB,CAC3BC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEgD,eACvB/C,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL1B,eAAe4B,QACb,wBACAT,KAAKC,UAAUM,IAEjByB,EAAQ8D,OAAOC,OAAOxF,OAEvBiB,OAAM,SAACC,GAAD,OAAWQ,EAAOR,OAEjB,SAACO,GAAD,OACVA,EAAQ8D,OAAOC,OAAO/F,KAAK6B,MAAMgE,OAKzC,SAASG,IACP,IAAM/C,EAAatB,IAEnB,OAAO,IAAII,SAAQ,SAACC,EAASC,GAC3BpC,MAAM,mBAAoB,CACxBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEgD,eACvB/C,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMwF,EAAmBD,OAAOC,OAAOxF,GACvCyB,EAAQ+D,EAAOhB,KAAI,SAACkB,GAAD,OAAelC,KAAKmC,MAAU,IAAJD,GAAW,WAEzDzE,OAAM,SAACH,GAAD,OAASY,EAAOZ,SAgHd8E,MA5Gf,WAAyB,IAAD,EACM/I,mBAAmB,IADzB,mBACfgJ,EADe,KACPC,EADO,OAEIjJ,mBAAmB,IAFvB,mBAEfkJ,EAFe,KAERC,EAFQ,KAIhBC,EAAgB,CACpB,UACA,eACA,UACA,MACA,QACA,OACA,cACA,gBACA,aAGIC,EAAYtI,sBAAW,sBAAC,oCAAAiE,EAAA,sEAC0BL,QAAQ6C,IAAwB,CACpFgB,IACAI,MAH0B,mCACrBH,EADqB,KACCa,EADD,KAKtBC,EAASd,EAAqBd,KAAI,SAAC6B,EAAKnB,GAAN,OAC9B,IAARmB,EAAYF,EAAgBjB,GAASmB,EAAM,KAE7CP,EAAUK,GACVH,EAASI,GATmB,2CAU3B,IAyBH,OAvBA/H,qBAAU,WACR6H,IACGjF,OAAM,SAAAH,GAAG,OAAI9C,QAAQkD,MAAMJ,QAC7B,CAACoF,IAEJ7H,qBAAU,WAWR,IAVA,IASMiI,EAAiCL,EANtBzB,KAAI,SAAC+B,GAClB,IAAMC,EAAkCC,SAASC,eAC/CH,GAEF,OAAuB,OAAhBC,EAAuB,KAAOA,EAAYrI,SAG5C6G,EAAI,EAAGA,EAAIsB,EAAchD,SAAU0B,EACjB,OAArBsB,EAActB,KACfsB,EAActB,GAA2B2B,OACvC,GAAKZ,EAAMf,IAAI4B,WAAa,OAElC,CAACX,EAAeF,IAGjB,6BAAStH,UAAU,YACjB,wBAAIA,UAAU,aACZ,4CACA,wDACA,kDACA,4CACA,4CACA,kDACA,8DACA,8DACA,qEAGF,wBAAIA,UAAU,mBACZ,4BACE,yBAAKI,GAAG,YACPgH,EAAO,GAFV,QAIA,4BACE,yBAAKhH,GAAG,iBACPgH,EAAO,GAFV,KAIA,4BACE,yBAAKhH,GAAG,YACPgH,EAAO,GAFV,KAIA,4BACE,yBAAKhH,GAAG,QACPgH,EAAO,GAFV,KAIA,4BACE,yBAAKhH,GAAG,UACPgH,EAAO,GAFV,KAIA,4BACE,yBAAKhH,GAAG,SACPgH,EAAO,GAFV,MAIA,4BACE,yBAAKhH,GAAG,gBACPgH,EAAO,GAFV,MAIA,4BACE,yBAAKhH,GAAG,kBACPgH,EAAO,GAFV,KAIA,4BACE,yBAAKhH,GAAG,cACPgH,EAAO,GAFV,KAIA,yBAAKpH,UAAU,0B,OC7HRoI,MA3Bf,WAIE,OACE,gCACE,yBAAKpI,UAAU,aACb,kBAAC,IAAD,CAAM0C,GAAG,KACP,yBAAKzC,IAAI,0BAA0BC,IAAI,UAEzC,kBAAC,IAAD,CAAMwC,GAAG,aAAT,gBACA,kBAAC,IAAD,CAAMA,GAAG,eAAT,iBAEF,yBAAK1C,UAAU,cACb,kBAAC,IAAD,CAAM0C,GAAG,UACP,kBAAC,IAAD,CACE4B,KAAM+D,IACNjE,KAAK,KACLxD,QAjBW,WACnBf,eAAeyI,SAiBPjE,MAAM,gBCDHkE,MAlBf,YAAqC,IAArBC,EAAoB,EAApBA,QAASrK,EAAW,EAAXA,QAOvB,OANAyB,qBAAU,WACH4I,GACHrK,EAAQ4B,KAAK,aAKf,oCACE,kBAAC,EAAD,MACA,6BAASC,UAAU,YACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,S,OCCOyI,MAjBf,YAAiE,IAAtC7E,EAAqC,EAArCA,UACzB,OACE,oCACE,yBAAK5D,UAAU,WACZ4D,EACC,uBAAG5D,UAAU,0BAEb,uBAAGA,UAAU,4BAGjB,yBAAKA,UAAU,WACb,oH,iCCPO,SAAS0I,EAAQC,GAAQ,IAMlClD,EANiC,EACTrH,mBAAS,CACnCwK,KAAM,KAF6B,mBAC9BlK,EAD8B,KACtBC,EADsB,KAK/BkK,EAAShJ,eAAeC,QAAQ,iBAGvBuG,IAAXwC,EACFpD,EAAWzE,KAAK6B,MAAMgG,GAAQtF,OAAOwC,KAAI,kBAA6B,CACpEC,QADuC,EAAGA,QAE1CxC,UAFuC,EAAYA,cAKrDmF,EAAMxK,QAAQ4B,KAAK,KAGJrB,EAATkK,KAmBR,OACE,yBAAKxI,GAAG,cACN,kBAAC,IAAD,CAAiBkE,KAAMwE,MACvB,kBAAC,IAAD,CACEC,WAjBa,CACjB5I,YAAa,YACbT,MAAO,CACLwI,MAAO,OACPc,OAAQ,OACRC,aAAc,GACdC,YAAa,QACbC,SAAU,GACV9E,MAAO,UACP+E,YAAa,KASXC,MAAO5D,EAEP6D,aAAc,CACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBT,OAAQ,IAGVU,UAAW,CACTT,aAAc,MACdU,UAAW,gCACXC,WAAY,2BACZC,UAAW,aACXC,QAAS,WACTX,SAAU,MACVY,SAAU,QACVC,SAAU,OACVC,SAAU,MACVC,UAAW,OAEbC,iBAAkB,SAACC,EAAM9K,GAAP,OAChB8K,EAAK5G,UAAU6G,cAAcC,QAAQhL,EAAM+K,gBAAkB,GAE/DE,aAAc,SAACH,GAAD,OAAUA,EAAK5G,WAC7BgH,WAAY,SAACJ,EAAMK,GAAP,OACV,yBACE/D,IAAK0D,EAAKpE,QACVtG,MAAO,CACL6J,QAAS,OACTC,WAAY,SACZR,OAAQ,GACRrJ,gBAAiB8K,EAAc,OAAS,gBAGzCL,EAAK5G,YAGVlE,MAAOZ,EAAOkK,KACd1J,SAAU,SAACE,GAAD,OAAOT,EAAU,CAAEiK,KAAMxJ,EAAEC,OAAOC,SAC5CoL,SAAU,SAAC9B,GAAD,OAAUjK,EAAU,CAAEiK,a,IChFnClF,E,iBAAAA,O,cAAAA,I,6BAAAA,I,qBAAAA,I,iBAAAA,I,2BAAAA,I,6BAAAA,I,qBAAAA,I,0BAAAA,M,KAoDUiH,IC/CVC,ED+CUD,EAzCf,YAAoD,IAAtBpH,EAAqB,EAArBA,OAAqB,EACrBnF,mBAA8BmF,EAAOwC,KAAI,SAAA8E,GAAO,OAAIA,EAAO,UADtC,mBAC1CC,EAD0C,KAClCC,EADkC,KAG3CC,EAAe7L,uBAAY,SAACuF,GAChC,OAAOA,EAAKqB,IAAL,uCAAS,WAAOkF,GAAP,eAAA7H,EAAA,0DASM,KANpBD,EAA8B,kBAAV8H,EAChBA,EACAnE,OAAOC,OAAOrD,GAAMwH,SAASD,GAC3BvH,EAAKuH,IACJ,GAPO,sBASe,IAAIE,MAAM,+BATzB,yCAYLjI,EAAYC,IAZP,sCAcN,IAAIgI,MAAJ,4CAdM,yDAAT,yDAiBN,IAQH,OANAvL,qBAAU,WACR,IAAMwL,EAAU7H,EAAOwC,KAAI,SAAA8E,GAAO,OAAIA,EAAO,SAC3B9H,QAAQ6C,IAAIoF,EAAaI,IACjChK,MAAK,SAACiK,GAAD,OAAyBN,EAAUM,QACjD,CAACL,EAAczH,IAGhB,yBAAKnD,GAAG,gBACN,kBAAC,EAAD,MACA,4BACG0K,EAAO/E,KAAI,SAACkF,EAAOxE,GAAR,OACV,wBAAIC,IAAKD,GAAQwE,U,SCxCtBL,O,qBAAAA,I,qBAAAA,I,qBAAAA,I,wBAAAA,M,KAoDUU,MA7Cf,YAAuD,IAA/BC,EAA8B,EAA9BA,QAAShI,EAAqB,EAArBA,OAAqB,EAC1BnF,mBAAgBwM,EAAMY,SADI,mBAC7CC,EAD6C,KACtCC,EADsC,KAqBpD,OAdA9L,qBAAU,WACO,OAAX2D,EACFmI,EAASd,EAAMY,SACY,IAAlBjI,EAAOsB,OAChB6G,EAASd,EAAMe,UAEfD,EAASd,EAAMgB,WAEhB,CAACrI,IAEJ3D,qBAAU,WACR8L,EAASd,EAAMY,WACd,CAACD,IAEe,OAAZA,EAAmB,KACxB,yBAAKvL,UAAU,yBACb,+BACGyL,IAAUb,EAAMY,QACf,uBAAGxL,UAAU,6BACX,KACJ,2BAAOA,UAAU,aAAaM,KAAK,SAASM,QAxB/B,WACjB8K,EAASd,EAAMiB,aAyBZJ,IAAUb,EAAMiB,QAEb,6BACE,kBAAC,eAAD,OAGFJ,IAAUb,EAAMgB,QACd,kBAAC,EAAD,CAAoBrI,OAAQA,IAC5BkI,IAAUb,EAAMe,SACd,2EACA,O,OCuDCG,MA5Ff,YAAgE,IAA1C7H,EAAyC,EAAzCA,WAAY8H,EAA6B,EAA7BA,eAA6B,EAC3B3N,oBAAkB,GADS,mBACtDwF,EADsD,KAC3CC,EAD2C,OAEnCzF,mBAAwB,CAChD4N,KAAM,KACNC,WAAY,OAJ+C,mBAEtDR,EAFsD,KAE/CC,EAF+C,OAM/BtN,mBAA6B,MANE,mBAMtDmN,EANsD,KAM7CW,EAN6C,OAOzB9N,mBAAyB,MAPA,mBAOtD+N,EAPsD,KAO1CC,EAP0C,KA6BvDC,EAAWlN,uBAAY,SAACmN,GAC5BzL,MAAM,gBAAiB,CACrBC,OAAQ,OACRC,KAAMuL,IAELlL,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLhC,QAAQC,IAAI+B,GACZ6K,EAAc7K,QAEjB,IA6BH,OAXA3B,qBAAU,WACW,OAAf6L,EAAMO,MACRE,EACE,yBACElM,UAAU,UACVC,IAAKwL,EAAMQ,WACX/L,IAAI,mDAGT,CAACuL,IAGF,0BACEzL,UAAU,SACVuM,SA9BiB,SACnBnN,GAIA2M,GAAe,GAEf3M,EAAEoN,iBACF,IAAMC,EAAW,IAAIC,SAErBD,EAASE,OAAO,KAAM1I,EAAWkE,YACjCsE,EAASE,OAAO,MAAOvN,EAAEC,OAAOuN,IAAIC,MAAM,IAE1CR,EAASI,IAkBPK,QAAQ,uBAER,2BACE5I,YAAa,kBAAML,GAAa,IAChCM,WAAY,kBAAMN,GAAa,KAElB,OAAZ0H,EAAmB,kBAAC,EAAD,CAAiB3H,UAAWA,IAAgB2H,EAChE,2BACEvL,UAAU,aACVM,KAAK,OACLyM,OAAO,iCACP1O,KAAK,MACLa,SA3ES,SAACE,GAEhB,GADAA,EAAEoN,iBACqB,OAAnBpN,EAAEC,OAAOwN,MAAb,CAEA,IAAIG,EAAS,IAAIC,WACbjB,EAAO5M,EAAEC,OAAOwN,MAAM,GAE1B,QAAaxG,IAAT2F,EAEF,OADAE,EAAW,MACJ,KAGTc,EAAOE,UAAY,kBACjBxB,EAAS,CACPM,KAAMA,EACNC,WAAYe,EAAOzJ,UAEvByJ,EAAOG,cAAcnB,QA6DnB,kBAAC,EAAD,CAAcT,QAASA,EAAShI,OAAQ4I,M,OCpG9C,SAASiB,EAAT,GAA2C,IAAtBnN,EAAqB,EAArBA,IACnB,OACE,yBAAKD,UAAU,wBACb,yBAAKA,UAAU,kBACb,yBAAKC,IAAKA,EAAKC,IAAI,sCAiBZmN,MAXf,YAAmD,IAA5BC,EAA2B,EAA3BA,KAAM9G,EAAqB,EAArBA,OAC3B,OACE,yBAAKxG,UAAU,mBACb,4BAAKsN,EAAKC,MAAM,EAAG,GAAnB,IAAwBD,EAAKC,MAAM,EAAG,GAAtC,IAA2CD,EAAKC,MAAM,EAAG,GAAzD,KACA,yBAAKvN,UAAU,WACZwG,EAAOT,KAAI,SAAC9F,GAAD,OAAS,kBAACmN,EAAD,CAAY1G,IAAKzG,EAAKA,IAAKA,UC+BzCuN,MAtCf,YAAkE,IAAvCvJ,EAAsC,EAAtCA,WAAYwJ,EAA0B,EAA1BA,YAA0B,EACrBrP,mBAA8B,IADT,mBACxDsP,EADwD,KACzCC,EADyC,KAGzDC,EAAqBzO,uBAAY,WACrC0B,MAAM,gBAAiB,CACrBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEgD,eACvB/C,QAAS,CACP,eAAgB,sBAGjBE,MAAK,SAACC,GAAD,OAAmBA,EAAIC,UAC5BF,MAAK,SAACG,GAAD,OAA+BoM,EAAiBpM,EAAKsM,gBAC5D,CAAC5J,IAUJ,OARArE,oBAAUgO,EAAoB,CAACA,IAE/BhO,qBAAU,WACJ6N,EAAY,IACdG,MAED,CAACA,EAAoBH,IAGtB,6BAASzN,UAAU,iBACjB,6BAASA,UAAU,gBACS,IAAzB0N,EAAc7I,OACb6I,EAAc3H,KAAI,WAAmBU,GAAnB,IAAG6G,EAAH,EAAGA,KAAM9G,EAAT,EAASA,OAAT,OAChB,kBAAC,EAAD,CAAaE,IAAKD,EAAO6G,KAAMA,EAAM9G,OAAQA,OAG/C,2FCxBKsH,MAhBf,WACE,IAAM7J,EAAa8J,mBAAQ,kBAAMpL,MAAiB,IADhC,EAEiBvE,oBAAS,GAF1B,mBAEX4P,EAFW,KAEDjC,EAFC,KAIlB,OACE,yBAAK/L,UAAU,2BACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYiE,WAAYA,EAAY8H,eAAgBA,IACpD,kBAAC,EAAD,CACE9H,WAAYA,EACZwJ,YAAa,CAACO,EAAUjC,O,2BCHhC,SAASkC,GAAT,GAAkC,IAAnB7D,EAAkB,EAAlBA,KAAQ8D,GAAU,EAAbC,EAAa,EAAVD,UACnB,OACI,6BACE,+BAAO,2BAAI9D,GACX,kBAACgE,GAAA,EAAD,CAAQhO,GAAG,SACXQ,QAAU,kBAAMsN,EAAS9D,KACzB,kBAAC,IAAD,SAOKiE,OAtBf,YAAqC,IAAnB3J,EAAkB,EAAlBA,KAAMwJ,EAAY,EAAZA,SACtB,OACE,6BACGxJ,EAAKqB,KAAI,SAACqE,EAAM3D,GAAP,OACR,kBAACwH,GAAD,CAAM7D,KAAMA,EAAM1D,IAAKD,EAAOyH,SAAUA,S,oBCH1CI,GAAQ,CACZ,CACEhP,MAAO,EACP2L,MAAO,KAET,CACE3L,MAAO,EACP2L,MAAO,KAET,CACE3L,MAAO,GACP2L,MAAO,OAGI,SAASsD,GAAT,GAAqC,IAAZC,EAAW,EAAXA,SAGpC,OACE,yBAAKxO,UAAU,UACb,kBAACyO,GAAA,EAAD,CAAYrO,GAAG,yBAAyBsO,cAAY,GAApD,qDAGA,kBAACC,GAAA,EAAD,CACEC,aAAc,EACdC,kBAAgB,yBAChBC,KAAM,EACNC,IAAK,GACLC,IAAK,EACLC,kBAAkB,OAClBX,MAAOA,GACPjK,MAAM,UACN6K,kBAAmB,SAAC9P,EAAGE,GAErBkP,EAASlP,OCtBN6P,OAbf,YAA2C,IAAzBC,EAAwB,EAAxBA,OAAOZ,EAAiB,EAAjBA,SAGfvO,GAHgC,EAARoP,MAGrB,uCAAmCD,EAAnC,SACT,OACI,yBAAKpP,UAAY,QACb,yBAAKI,GAAG,UAAUH,IAAKA,IACvB,kBAACsO,GAAD,CAAgBC,SAAUA,MCLtC,SAASY,KAEP,OAAOrK,KAAKmC,MADA,IACMnC,KAAKuK,OAAO,EADlB,MAuDCC,OAnDf,YAA2B,EAAVpR,QAAW,IAAD,EACHC,mBAASgR,MADN,mBAClBI,EADkB,KACbC,EADa,OAEOrR,qBAFP,mBAElB0F,EAFkB,KAERC,EAFQ,OAGC3F,mBAAS,GAHV,mBAGlBiR,EAHkB,KAGXb,EAHW,KA6BzB,OAvBA5O,qBAAU,WACRsD,EAAYsM,GAAKpO,MAAK,SAACC,GAAD,OAAS0C,EAAY1C,QAC1C,CAACmO,IACJ5P,qBAAU,WACRL,QAAQC,IAAI6P,KACZ,CAACA,IAmBD,yBAAKjP,GAAG,OACN,iGACA,0BAAMA,GAAG,YAAY0D,GACrB,kBAAC,GAAD,CAASsL,OAAQI,EAAKhB,SAAUA,EAAUa,MAAOA,IACjD,kBAACjB,GAAA,EAAD,CAAQhO,GAAG,SAASQ,QAtBR,WACd6O,EAAOL,QAqBL,6BAGA,kBAAChB,GAAA,EAAD,CAAQhO,GAAG,OAAOQ,QAtBT,WACXC,MAAM,YAAa,CACjBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEgD,WAAapE,eAAeC,QAAQ,UAAWqD,WAAYqM,EAAKH,MAAMA,IAC7FnO,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAETC,MAAK,SAACC,GAAD,OAASA,EAAIC,UACpBF,MAAK,SAACG,GACLkO,EAAOL,WAYP,mCAGA,kBAAChB,GAAA,EAAD,CACEhO,GAAG,OACHQ,QAAS,cAFX,iD,OCyJS8O,OAtMf,YAA8B,IAAXvR,EAAU,EAAVA,QAAU,EACGC,mBAAS,CACjCuR,OAAQ,GACRC,UAAS,EACTlL,KAAM,GACNmL,OAAO,GACPhH,OAAO,GACPiH,QAAQ,KAPa,mBAClBpR,EADkB,KACVC,EADU,KASlBgR,EAA8CjR,EAA9CiR,OAAOC,EAAuClR,EAAvCkR,SAASlL,EAA8BhG,EAA9BgG,KAAKmL,EAAyBnR,EAAzBmR,OAAOhH,EAAkBnK,EAAlBmK,OAAOiH,EAAWpR,EAAXoR,QAE1ClQ,qBAAU,WACS,IAAd8E,EAAKG,QACNlG,EAAU,eACLD,EADI,CAEPiR,OAAO,GACPC,UAAS,OAGb,CAAClL,IAEH,IAAMxF,EAAWC,uBACb,SAACC,GAAO,IAOQ,EAPT,EACmBA,EAAEC,OAAlBhB,EADH,EACGA,KAAMiB,EADT,EACSA,OACdX,EAAU,eACLD,EADI,eAENL,EAAOiB,KAGC,KAARA,IACDX,EAAU,eACLD,GADI,mBAENL,EAAMiB,GAFA,0BAGE,GAHF,OAQb,CAACZ,IA0GL,OACI,6BACE,yBAAKsB,UAAU,QACf,yBAAKA,UAAU,QACf,yBAAKC,IAAI,wBAAwBC,IAAI,sBAAOE,GAAK,SAC/C,yBAAKJ,UAAU,YACb,yBAAKA,UAAU,SACjB,2FACA,4BACI,2BAAO3B,KAAM,SAAS8B,YAAY,oDAAYjB,SAAUA,EAAUI,MAASqQ,IAC3E,kBAACvB,GAAA,EAAD,CAAQhO,GAAI,OACZQ,QAhGc,WACxBrB,QAAQC,IAAImQ,GACZ9O,MAAM,qBAAsB,CAC1BC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAC0O,OAAOA,IAC7BzO,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMwO,EAAIxO,EAAKwE,KAAI,SAAAiK,GAAI,OAAIA,EAAKxM,aAEhC7E,EAAU,eACPD,EADM,CAETkR,UAAS,EACTlL,KAAKqL,EACLD,QAAQH,SA+EFM,QAAQ,YACR5L,MAAM,WAHN,gBAMA,kBAAC+J,GAAA,EAAD,CAAQhO,GAAI,MACZQ,QA1EW,WAErB,IAAMmP,GAAkC,IAA3BlH,EAAOyB,QAAQwF,GAE5B,GAAiB,IAAdpL,EAAKG,OACNtF,QAAQC,IAAI,6EACZb,EAAU,eACLD,EADI,CAEPiR,OAAO,GACPC,UAAS,UAIV,GAAGG,EAAI,CAEN,IAAMG,EAAO,CACXxJ,IAAIiJ,EACJjL,KAAKA,EAAKyL,KAAK,MAEjB5Q,QAAQC,IAAI0Q,GACZvR,EAAU,CACRgR,OAAO,GACPC,UAAS,EACTlL,KAAK,GACLmL,OAAOA,EAAOO,OAAOF,GACrBrH,OAAOA,EAAOuH,OAAON,UAIvBvQ,QAAQC,IAAR,4CAAwBsQ,KA8ClBG,QAAQ,YACR5L,MAAM,WAHN,gBAMA,kBAAC+J,GAAA,EAAD,CAAQhO,GAAK,SACbQ,QA1CK,WACfrB,QAAQC,IAAIqQ,GACZ,IAAMQ,EAAQR,EAAO9J,KAAI,SAAAqE,GAAI,OAAIA,EAAK1F,QACtCnF,QAAQC,IAAI6Q,EAAMF,KAAK,MACvBtP,MAAM,YAAa,CACjBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAC4H,OAAOwH,EAAMF,KAAK,KAAMzO,QAAU7B,eAAeC,QAAQ,YAC/EoB,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAETC,MAAK,SAACC,GAAD,OAASA,EAAIC,UACpBF,MAAK,SAACG,GACPhC,QAAQC,IAAI+B,GACZpD,EAAQ4B,KAAK,SA6BHkQ,QAAQ,YACR5L,MAAM,WAHN,gBAMD,yBAAKrE,UAAU,SAED,IAAZ4P,EACE,+BAAO,2BAAID,GAAX,6DACC,MAGS,IAAZC,EACG,kBAAC,GAAD,CAAQlL,KAAMA,EAAMwJ,SA5IjB,SAAC9D,GACd7K,QAAQC,IAAR,uBAAkB4K,IAClBzL,EAAU,eACLD,EADI,CAEPgG,KAAKA,EAAK4L,QAAO,SAAAN,GAAI,OAAIA,IAAQ5F,WAyIzB,kBAAC,GAAD,CAAQ1F,KAAMmE,EAAQqF,SArIlB,SAAC9D,GACf7K,QAAQC,IAAR,yCAAqB4K,IAGrBzL,EAAU,eACLD,EADI,CAEPmK,OAAOA,EAAOyH,QAAO,SAAAN,GAAI,OAAGA,IAAQ5F,KACpCyF,OAAOA,EAAOS,QAAO,SAAAN,GAAI,OAAGA,EAAKtJ,MAAO0D,aAoItC,kBAAC,GAAD,Y,yCCdCmG,OA3Kf,SAAoB5H,GAClB,IAAM6H,EAAYxP,KAAK6B,MAAMhD,eAAeC,QAAQ,SAAS,GAAG0Q,UADvC,EAEGpS,mBAAS,IAFZ,mBAElBqS,EAFkB,KAEVC,EAFU,KAOzB9Q,qBAAU,WACR,IAAM8B,EAAUiB,KAEC,IAAbjB,GACFb,MAAM,wBAAyB,CAC7BC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEgD,WAAYvC,IACnCR,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAELmP,EAAU,GAAD,oBACJD,GADI,CAET,CACE3F,OAAQ,CAACvJ,EAAK,GAAGoP,aAAGpP,EAAK,GAAGoP,aAAGpP,EAAK,GAAGoP,aAAGpP,EAAK,GAAGoP,aAAGpP,EAAK,GAAGoP,aAAGpP,EAAK,GAAGoP,aAAGpP,EAAK,GAAGoP,cACnFC,SAAU,CACR,CACE3F,MAAO,eACPtL,gBAAiB,MACjBuJ,YAAa,gBACb2H,YAAa,EACbtP,KAAM,CAACA,EAAK,GAAGuP,aAAIvP,EAAK,GAAGuP,aAAIvP,EAAK,GAAGuP,aAAIvP,EAAK,GAAGuP,aAAIvP,EAAK,GAAGuP,aAAIvP,EAAK,GAAGuP,aAAIvP,EAAK,GAAGuP,oBAK7FJ,EAAU,GAAD,oBACJD,GADI,CAET,CACE3F,OAAQ,CAACvJ,EAAK,GAAGoP,aAAGpP,EAAK,GAAGoP,aAAGpP,EAAK,GAAGoP,aAAGpP,EAAK,GAAGoP,aAAGpP,EAAK,GAAGoP,aAAGpP,EAAK,GAAGoP,aAAGpP,EAAK,GAAGoP,cACnFC,SAAU,CACR,CACE3F,MAAO,2BACPtL,gBAAiB,SACjBuJ,YAAa,gBACb2H,YAAa,EACbtP,KAAM,CAACA,EAAK,GAAGwP,yBAAMxP,EAAK,GAAGwP,yBAAMxP,EAAK,GAAGwP,yBAAMxP,EAAK,GAAGwP,yBAAMxP,EAAK,GAAGwP,yBAAMxP,EAAK,GAAGwP,yBAAMxP,EAAK,GAAGwP,qCAQ9G,IAGH,IAAIC,EAAQ,SAAC5R,GAEX,OADAG,QAAQC,IAAIiR,GACLrR,EAAEC,OAAOC,OAEd,IAAK,eACH0I,SAASiJ,uBAAuB,gBAAM,GAAGvR,MAAM6J,QAAQ,SAGvD,MACF,IAAK,eACHvB,SAASiJ,uBAAuB,gBAAM,GAAGvR,MAAM6J,QAAQ,SAS7D,OACE,6BACE,yBAAK2H,MAAM,eACX,yBAAKA,MAAM,SACV,2BAAO9Q,GAAG,KAAK8Q,MAAM,kBAAkB5Q,KAAK,QAAQjC,KAAK,QAAQiB,MAAM,eAAKJ,SAAU8R,IACtF,2BAAOG,IAAI,MAAX,iBAED,yBAAKD,MAAM,SACV,2BAAO9Q,GAAG,KAAK8Q,MAAM,UAAU5Q,KAAK,QAAQjC,KAAK,QAAQiB,MAAM,eAAKJ,SAAU8R,IAC9E,2BAAOG,IAAI,MAAX,kBAGH,yBAAKnR,UAAY,gBACf,kBAAC,KAAD,CAAKI,GAAG,MACJmB,KAAMkP,EAAO,GACbvI,MAAO,IACPc,OAAQ,IACRoI,QAAS,CACPC,YAAY,EACZC,MAAO,CACL/H,SAAS,EACT/H,KAAMgP,EAAY,0CAClBrH,SAAU,IAEZoI,OAAQ,CACNhI,SAAS,EACTQ,SAAU,OAEZyH,OAAQ,CACNC,MAAO,CAAC,CAAEC,UAAW,CAAEnI,SAAS,KAChCoI,MAAO,CAAC,CAAED,UAAW,CACnBE,YAAY,GAEZC,MAAO,CACHtI,SAAS,MAIjBuI,UAAW,CACTC,UAAW,YACX5I,SAAU,OAIhB,kBAAC6I,GAAA,EAAD,KACE,4FAIF,iCACA,kBAAC,KAAD,CAAK5R,GAAG,OACNmB,KAAMkP,EAAO,GACbvI,MAAO,IACPc,OAAQ,IACRoI,QAAS,CACPC,YAAY,EACZC,MAAO,CACL/H,SAAS,EACT/H,KAAMgP,EAAY,0CAClBrH,SAAU,IAEZoI,OAAQ,CACNhI,SAAS,EACTQ,SAAU,OAEZyH,OAAQ,CACNC,MAAO,CAAC,CAAEC,UAAW,CAAEnI,SAAS,KAChCoI,MAAO,CAAC,CAAED,UAAW,CACnBE,YAAY,GAEZC,MAAO,CACHtI,SAAS,MAIjBuI,UAAW,CACTC,UAAW,YACX5I,SAAU,OAIhB,iCACA,kBAAC6I,GAAA,EAAD,KACE,gGClIKC,OA3Bf,WAAgB,IAAD,EACa7T,mBACxBgE,QAAQvC,eAAeC,QAAQ,aAFpB,mBACN0I,EADM,KACG5G,EADH,KAKb,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsQ,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAAzJ,GAAK,OAAI,kBAAC,EAAD,iBAAUA,EAAV,CAAiBH,QAASA,QAE7C,kBAAC,IAAD,CAAO2J,KAAK,UAAUE,UAAWnU,IACjC,kBAAC,IAAD,CAAOiU,KAAK,YAAYE,UAAW3C,KACnC,kBAAC,IAAD,CACEyC,KAAK,SACLC,OAAQ,SAAAzJ,GAAK,OAAI,kBAAC,EAAD,iBAAWA,EAAX,CAAkB/G,OAAQA,QAE7C,kBAAC,IAAD,CAAOuQ,KAAK,YAAYE,UAAWvE,IACnC,kBAAC,IAAD,CAAOqE,KAAK,cAAcE,UAAW9B,KACrC,kBAAC,IAAD,CAAO4B,KAAK,WAAWE,UAAW3J,OCpBpC4J,GAAclQ,QACW,cAA7BmQ,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA8CN,SAASC,GAAgBC,EAAeC,GACtCC,UAAUC,cACP1G,SAASuG,GACTxR,MAAK,SAAA4R,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzH,QACfqH,UAAUC,cAAcM,YAI1B9T,QAAQC,IACN,iHAKEqT,GAAUA,EAAOS,UACnBT,EAAOS,SAASN,KAMlBzT,QAAQC,IAAI,sCAGRqT,GAAUA,EAAOU,WACnBV,EAAOU,UAAUP,WAO5BxQ,OAAM,SAAAC,GACLlD,QAAQkD,MAAM,4CAA6CA,MClGjE+Q,IAASpB,OACP,kBAAC,IAAMqB,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJzL,SAASC,eAAe,SDenB,SAAkB4K,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIY,IACpBC,8BACApB,OAAOC,SAASoB,MAEJC,SAAWtB,OAAOC,SAASqB,OAIvC,OAGFtB,OAAOuB,iBAAiB,QAAQ,WAC9B,IAAMlB,EAAK,UAAMe,8BAAN,sBAEPrB,KAgEV,SAAiCM,EAAeC,GAE9ChS,MAAM+R,EAAO,CACX1R,QAAS,CAAE,iBAAkB,YAE5BE,MAAK,SAAA2S,GAEJ,IAAMC,EAAcD,EAAS7S,QAAQ+S,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAY1J,QAAQ,cAG5CwI,UAAUC,cAAcoB,MAAM/S,MAAK,SAAA4R,GACjCA,EAAaoB,aAAahT,MAAK,WAC7BmR,OAAOC,SAAS6B,eAKpB1B,GAAgBC,EAAOC,MAG1BrQ,OAAM,WACLjD,QAAQC,IACN,oEAvFA8U,CAAwB1B,EAAOC,GAI/BC,UAAUC,cAAcoB,MAAM/S,MAAK,WACjC7B,QAAQC,IACN,iHAMJmT,GAAgBC,EAAOC,OCxC/BE,K","file":"static/js/main.bc026049.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect,useRef } from \"react\";\r\nimport \"./scss/SignUp.scss\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nfunction SignUp({ history }) {\r\n  const [inputs, setInputs] = useState({\r\n    name: \"\",\r\n    address: \"\",\r\n    password: \"\",\r\n    age: \"\",\r\n    sex: \"남\",\r\n  });\r\n  const { name, address, password, age,sex } = inputs;\r\n\r\n  const nameRef=useRef();\r\n  const addressRef=useRef();\r\n  const passwordRef=useRef();\r\n  const ageRef=useRef();\r\n  const buttonRef=useRef();\r\n\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target;\r\n      console.log(value);\r\n      setInputs({\r\n        ...inputs,\r\n        [name]: value,\r\n      });\r\n      if(nameRef.current.value && addressRef.current.value\r\n        && passwordRef.current.value && ageRef.current.value\r\n       ){\r\n        buttonRef.current.style.backgroundColor=\"#248aff\";\r\n      }\r\n    },\r\n    [inputs]\r\n  );\r\n\r\n  const isSuccess = () => {\r\n    setInputs({\r\n      name: \"\",\r\n      address: \"\",\r\n      password: \"\",\r\n      age: \"\",\r\n      sex: \"\",\r\n    });\r\n  };\r\n\r\n  const onClick = () => {\r\n    fetch(\"/addUser\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(inputs),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data.text);\r\n        if (data.text !== \"success\") {\r\n          isSuccess();\r\n          history.push(\"/\");\r\n        }\r\n        else{\r\n          sessionStorage.setItem('number',data.user_no);\r\n          history.push(\"/research\");\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isLogin = sessionStorage.getItem(\"isLogin\");\r\n    if (isLogin) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n      <div className =\"signup-page\">\r\n          <div className =\"signup-container\">\r\n          <img src=\"/images/maet-logo.png\" alt=\"팀 로고\" />\r\n          <input\r\n            name=\"name\"\r\n            placeholder=\"name\"\r\n            onChange={onChange}\r\n            value={name}\r\n            id = \"name\"\r\n            ref={nameRef}\r\n          />\r\n          <input\r\n            name=\"address\"\r\n            placeholder=\"address\"\r\n            onChange={onChange}\r\n            value={address}\r\n            id = \"address\"\r\n            ref={addressRef}\r\n          />       \r\n          <input\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n            onChange={onChange}\r\n            value={password}\r\n            type =\"password\"\r\n            id = \"password\"\r\n            ref={passwordRef}\r\n          />\r\n          <input\r\n           name=\"age\" \r\n           placeholder=\"age\" \r\n           onChange={onChange} \r\n           value={age}\r\n           id = \"age\"\r\n           ref={ageRef}\r\n            />\r\n        <div className=\"genderbox\">\r\n               <RadioGroup aria-label=\"gender\" id = \"gender\" name=\"sex\" value={sex} onChange={onChange} >\r\n                 <label>성별  :</label>\r\n                남 <FormControlLabel  id =\"sex\" value=\"남\"  control={<Radio/>}/>\r\n                여 <FormControlLabel  id =\"sex\" value=\"여\"  control={<Radio/>}/>\r\n               </RadioGroup>\r\n        </div>\r\n         \r\n      <button ref ={buttonRef} onClick={onClick}>제출</button>\r\n        </div>\r\n      \r\n      </div>\r\n  );\r\n}\r\nexport default SignUp;\r\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport \"./scss/Login.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login({ history, setLog }) {\r\n  const [inputs, setInputs] = useState({\r\n    id: \"\",\r\n    password: \"\",\r\n  });\r\n  const { id, password } = inputs;\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target;\r\n      setInputs({\r\n        ...inputs,\r\n        [name]: value,\r\n      });\r\n      if (idReference.current.value && passwordReference.current.value) {\r\n        buttonReference.current.style.backgroundColor = \"#3797F0\";\r\n      }\r\n    },\r\n    [inputs]\r\n  );\r\n\r\n  const isSuccess = () => {\r\n    setInputs({\r\n      id: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  const onClick = () => {\r\n    setLoading(true);\r\n    fetch(\"/process/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(inputs),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //Login Fail\r\n        if (data.err === \"error\") {\r\n          setLoading(false);\r\n          buttonReference.current.style.backgroundColor = \"#CBE0F8\";\r\n          errorMessage.current.innerHTML =\r\n            \"잘못된 비밀번호입니다. 다시 시도해주세요.\";\r\n          isSuccess();\r\n        } else {\r\n          sessionStorage.setItem(\"info\", JSON.stringify(data.user));\r\n          sessionStorage.setItem(\"isLogin\", \"true\");\r\n          //Go Home\r\n          console.log(\"Login Success\");\r\n          setLog(true);\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setLoading(false);\r\n        buttonReference.current.style.backgroundColor = \"#CBE0F8\";\r\n        errorMessage.current.innerHTML = \"서버 접속에 실패했습니다.\";\r\n        isSuccess();\r\n      });\r\n  };\r\n  const idReference = useRef();\r\n  const passwordReference = useRef();\r\n  const buttonReference = useRef();\r\n  const errorMessage = useRef();\r\n\r\n  useEffect(() => {\r\n    const isLogin = Boolean(sessionStorage.getItem(\"isLogin\"));\r\n    if (isLogin) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"introduce\" />\r\n      <div className=\"login-container\">\r\n        <img src=\"/images/maet-logo.png\" alt=\"팀 로고\" />\r\n        <input\r\n          name=\"id\"\r\n          placeholder=\"아이디\"\r\n          onChange={onChange}\r\n          value={id}\r\n          ref={idReference}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          type=\"password\"\r\n          onChange={onChange}\r\n          value={password}\r\n          ref={passwordReference}\r\n        />\r\n        <div className=\"error-message\" ref={errorMessage} />\r\n        <button onClick={onClick} ref={buttonReference}>\r\n          {!isLoading ? \"로그인\" : <div className=\"loader\" />}\r\n        </button>\r\n        <div className=\"hr-sect\">또는</div>\r\n        <div className=\"signup-nav\">\r\n          계정이 없으신가요?\r\n          <Link to=\"Signup\"> 가입하기</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","export default function getUserNumber(): number {\r\n  const userInfo: string | null = sessionStorage.getItem(\"info\");\r\n\r\n  return userInfo === null ? -1 : JSON.parse(userInfo)[0].user_no;\r\n}","type FoodInfoType = {\r\n  result: { food_name: string }[];\r\n};\r\n\r\nfunction getFoodInfo(): Promise<FoodInfoType> {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(\"/food/name\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res: Response) => res.json())\r\n      .then((data: FoodInfoType) => {\r\n        sessionStorage.setItem(\"foodInfo\", JSON.stringify(data));\r\n        resolve(data);\r\n      })\r\n      .catch((err: Error) => reject(err));\r\n  });\r\n}\r\n\r\nexport default async function getFoodName(foodNumber: number): Promise<string> {\r\n  const foodInfo = sessionStorage.getItem(\"foodInfo\");\r\n  const _foodInfo: FoodInfoType =\r\n    foodInfo === null ? await getFoodInfo() : JSON.parse(foodInfo);\r\n\r\n  return _foodInfo.result[foodNumber]?.food_name;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTired, faGrinHearts } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../scss/Food.scss\";\r\nimport getUserNumber from \"../getUserNumber\";\r\nimport getFoodName from \"../getFoodName\";\r\n\r\ntype FoodProps = {\r\n  imageSrc: string;\r\n  foodNumber: number;\r\n};\r\n\r\nconst init = {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\",\r\n  }\r\n};\r\n\r\nfunction Food({ imageSrc, foodNumber }: FoodProps) {\r\n  // const food_no = imageSrc.split(\".\")[0].split(\"/\")[2];\r\n  const [mouseOver, setMouseOver] = useState<boolean>(false);\r\n  const [foodName, setFoodName] = useState<string>();\r\n  const info = {\r\n    userNumber: getUserNumber(),\r\n    foodNumber,\r\n  };\r\n\r\n  const like = () => {\r\n    fetch(\"/food/like\", {\r\n      ...init,\r\n      body: JSON.stringify(info),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"선호도 올림.\");\r\n      });\r\n  };\r\n\r\n  const dislike = () => {\r\n    //DB 선호도 내리기\r\n    fetch(\"/food/dislike\", {\r\n      ...init,\r\n      body: JSON.stringify(info),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"선호도 내림 \");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFoodName(foodNumber)\r\n      .then(res => setFoodName(res))\r\n      .catch(e => console.error(e));\r\n  }, [foodNumber]);\r\n\r\n  return (\r\n    <div className=\"food-container\">\r\n      <div className=\"food\">\r\n        <div className=\"box\">\r\n          {mouseOver ? <p>{foodName}</p> : null}\r\n          <img\r\n            src={imageSrc}\r\n            alt=\"foodImage\"\r\n            onMouseOver={() => setMouseOver(true)}\r\n            onMouseOut={() => setMouseOver(false)}\r\n          />\r\n          <div>\r\n            <button className=\"like-button\" onClick={like}>\r\n              <FontAwesomeIcon\r\n                size=\"2x\"\r\n                color=\"rgb(255, 202, 0)\"\r\n                icon={faGrinHearts}\r\n              />\r\n            </button>\r\n            <button className=\"dislike-button\" onClick={dislike}>\r\n              <FontAwesomeIcon\r\n                size=\"2x\"\r\n                color=\"rgb(255, 202, 0)\"\r\n                icon={faTired}\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Food;\r\n","type ListType = {\r\n  food_no: number;\r\n  result: number;\r\n}[];\r\n\r\nfunction quickSort(list: ListType, left = 0, right = list.length - 1): ListType | undefined {\r\n  if (left >= right) return;\r\n\r\n  const mid = Math.floor((left + right) / 2);\r\n  const pivot = list[mid].result;\r\n  const divide = (\r\n    list: ListType,\r\n    left: number,\r\n    right: number,\r\n    pivot: number\r\n  ) => {\r\n    while (left <= right) {\r\n      while (list[left].result > pivot) {\r\n        left++;\r\n      }\r\n      while (list[right].result < pivot) {\r\n        right--;\r\n      }\r\n      if (left <= right) {\r\n        let swap = list[left];\r\n        list[left] = list[right];\r\n        list[right] = swap;\r\n        left++;\r\n        right--;\r\n      }\r\n    }\r\n    return left;\r\n  };\r\n  const partition = divide(list, left, right, pivot);\r\n\r\n  quickSort(list, left, partition - 1);\r\n  quickSort(list, partition, right);\r\n\r\n  return list;\r\n}\r\n\r\nexport {quickSort as foodListSort}","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport \"../scss/Recommendation.scss\";\r\nimport Food from \"./Food\";\r\nimport { PacmanLoader } from \"react-spinners\";\r\nimport { foodListSort } from \"./foodListSort\";\r\nimport getUserNumber from \"../getUserNumber\";\r\n\r\nfunction getFoodImage(foodList: Array<number>) {\r\n  let imgSrcList: string[] = [];\r\n  for (let i = 0; i < 30; ++i) {\r\n    const imgSrc = `http://localhost:4002/images/${foodList[i]}.png`;\r\n    imgSrcList.push(imgSrc);\r\n  }\r\n  return imgSrcList.map((src: string, index: number) => (\r\n    <Food key={src} imageSrc={src} foodNumber={foodList[index]} />\r\n  ));\r\n}\r\n\r\nconst init = {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\",\r\n  },\r\n};\r\n\r\nfunction fetchPreference(userNumber: number): Promise<DataType> {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(\"/userData/preference/all\", {\r\n      ...init,\r\n      body: JSON.stringify({ userNumber }),\r\n    })\r\n      .then((req) => req.json())\r\n      .then((data: DataType) => resolve(data))\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nfunction fetchLoss(userNumber: number): Promise<number[]> {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(\"/userData/foodLoss\", {\r\n      ...init,\r\n      body: JSON.stringify({ userNumber }),\r\n    })\r\n      .then((req: Response) => req.json())\r\n      .then((data: number[]) => resolve(data))\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\ntype DataType = {\r\n  food_no: number;\r\n  predicted_preference: number;\r\n}[];\r\n\r\nfunction Recommendation() {\r\n  const [foodList, setFoodList] = useState<Array<number>>();\r\n\r\n  const predictData = useCallback(async (userNumber: number) => {\r\n    const [preference, loss] = await Promise.all([\r\n      fetchPreference(userNumber),\r\n      fetchLoss(userNumber),\r\n    ]);\r\n\r\n    const result = preference.map(({ food_no, predicted_preference }) => ({\r\n      food_no,\r\n      result: predicted_preference * loss[food_no],\r\n    }));\r\n    const sorted = foodListSort(result);\r\n    console.log(sorted);\r\n    const predicted: number[] | undefined = foodListSort(result)?.map(\r\n      ({ food_no }) => food_no\r\n    );\r\n    setFoodList(predicted);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const userNumber = getUserNumber();\r\n    if (userNumber !== -1) {\r\n      predictData(userNumber)\r\n        .catch(err => console.error(err));\r\n    }\r\n  }, [predictData]);\r\n\r\n  return foodList === undefined ? (\r\n    <div className=\"loader\">\r\n      <PacmanLoader size={20} color={\"#646464\"} />\r\n    </div>\r\n  ) : (\r\n    <article className=\"recommendation\">\r\n      <h1>이런 음식 어때요? </h1>\r\n      {getFoodImage(foodList)}\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Recommendation;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport getUserNumber from \"../getUserNumber\";\r\nimport \"../scss/DateAnalytic.scss\";\r\n\r\n// 사용자의 영양 권장량을 가져오는 함수\r\nfunction getNutritionRecommended(): Promise<number[]> {\r\n  const recommendedNutrition: string | null = sessionStorage.getItem(\"recommended_nutrition\");\r\n  const userNumber = getUserNumber();\r\n\r\n  return recommendedNutrition === null\r\n    ? new Promise((resolve, reject) => {\r\n        fetch(\"/userData/nutrition\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ userNumber }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            sessionStorage.setItem(\r\n              \"recommended_nutrition\",\r\n              JSON.stringify(data)\r\n            );\r\n            resolve(Object.values(data));\r\n          })\r\n          .catch((error) => reject(error));\r\n      })\r\n    : new Promise((resolve) =>\r\n        resolve(Object.values(JSON.parse(recommendedNutrition)))\r\n      );\r\n}\r\n\r\n// 사용자의 일일 영양 섭취량을 가져오는 함수\r\nfunction getNutritionIntake(): Promise<number[]> {\r\n  const userNumber = getUserNumber();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    fetch(\"/userData/intake\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ userNumber }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      }\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const values: number[] = Object.values(data);\r\n        resolve(values.map((v: number) => Math.round(v * 100) / 100.0));\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nfunction DateAnalytic() {\r\n  const [intake, setIntake] = useState<number[]>([]);\r\n  const [ratio, setRatio] = useState<number[]>([]);\r\n\r\n  const nutritionList = [\r\n    \"calorie\",\r\n    \"carbohydrate\",\r\n    \"protein\",\r\n    \"fat\",\r\n    \"sugar\",\r\n    \"salt\",\r\n    \"cholesterol\",\r\n    \"saturated-fat\",\r\n    \"trans-fat\",\r\n  ];\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const [recommendedNutrition, nutritionIntake] = await Promise.all<number[], number[]>([\r\n      getNutritionRecommended(),\r\n      getNutritionIntake(),\r\n    ]);\r\n    const _ratio = recommendedNutrition.map((arg, index) =>\r\n      arg !== 0 ? nutritionIntake[index] / arg : 0\r\n    );\r\n    setIntake(nutritionIntake);\r\n    setRatio(_ratio);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n      .catch(err => console.error(err));\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    const getElementsStyle = (\r\n      nutritionArray: string[]\r\n    ): (CSSStyleDeclaration | null)[] =>\r\n      nutritionArray.map((nutrition) => {\r\n        const htmlElement: HTMLElement | null = document.getElementById(\r\n          nutrition\r\n        );\r\n        return htmlElement === null ? null : htmlElement.style;\r\n      });\r\n    const elementsStyle = getElementsStyle(nutritionList);\r\n    for (let i = 0; i < elementsStyle.length; ++i) {\r\n      if (elementsStyle[i] !== null)\r\n        (elementsStyle[i] as CSSStyleDeclaration).width =\r\n          (75 * ratio[i]).toString() + \"%\";\r\n    }\r\n  }, [nutritionList, ratio]);\r\n\r\n  return (\r\n    <article className=\"analytic\">\r\n      <ul className=\"nutrition\">\r\n        <li>열량</li>\r\n        <li>탄수화물</li>\r\n        <li>단백질</li>\r\n        <li>지방</li>\r\n        <li>당류</li>\r\n        <li>나트륨</li>\r\n        <li>콜레스테롤</li>\r\n        <li>포화지방산</li>\r\n        <li>트랜스지방산</li>\r\n      </ul>\r\n\r\n      <ul className=\"nutrition-graph\">\r\n        <li>\r\n          <div id=\"calorie\" />\r\n          {intake[0]}kcal\r\n        </li>\r\n        <li>\r\n          <div id=\"carbohydrate\" />\r\n          {intake[1]}g\r\n        </li>\r\n        <li>\r\n          <div id=\"protein\" />\r\n          {intake[2]}g\r\n        </li>\r\n        <li>\r\n          <div id=\"fat\" />\r\n          {intake[3]}g\r\n        </li>\r\n        <li>\r\n          <div id=\"sugar\" />\r\n          {intake[4]}g\r\n        </li>\r\n        <li>\r\n          <div id=\"salt\" />\r\n          {intake[5]}mg\r\n        </li>\r\n        <li>\r\n          <div id=\"cholesterol\" />\r\n          {intake[6]}mg\r\n        </li>\r\n        <li>\r\n          <div id=\"saturated-fat\" />\r\n          {intake[7]}g\r\n        </li>\r\n        <li>\r\n          <div id=\"trans-fat\" />\r\n          {intake[8]}g\r\n        </li>\r\n        <div className=\"recommended-amount\" />\r\n      </ul>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default DateAnalytic;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./scss/Header.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faUserCircle} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Header() {\r\n  const clearStorage = () => {\r\n    sessionStorage.clear();\r\n  };\r\n  return (\r\n    <header>\r\n      <nav className=\"left-side\">\r\n        <Link to=\"/\">\r\n          <img src=\"../images/maet-logo.png\" alt=\"logo\" />\r\n        </Link>\r\n        <Link to=\"/register\">등록</Link>\r\n        <Link to=\"/statistics\">통계</Link>\r\n      </nav>\r\n      <div className=\"right-side\">\r\n        <Link to=\"/login\">\r\n          <FontAwesomeIcon\r\n            icon={faUserCircle}\r\n            size=\"2x\"\r\n            onClick={clearStorage}\r\n            color=\"#A5A5A5\"\r\n          />\r\n        </Link>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Home.scss\";\r\nimport Recommendation from \"../components/Home/Recommendation\";\r\nimport DateAnalytic from \"../components/Home/DateAnalytic\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction Home({ isLogin, history }) {\r\n  useEffect(() => {\r\n    if (!isLogin) {\r\n      history.push(\"/Login\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"homepage\">\r\n        <DateAnalytic />\r\n        <Recommendation />\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction RegisterWelcome({ mouseOver }: { mouseOver: boolean }) {\r\n  return (\r\n    <>\r\n      <div className=\"welcome\">\r\n        {mouseOver ? (\r\n          <i className=\"far fa-surprise fa-2x\" />\r\n        ) : (\r\n          <i className=\"far fa-meh-blank fa-2x\" />\r\n        )}\r\n      </div>\r\n      <div className=\"welcome\">\r\n        <p>오늘 먹은 식단을 등록해보세요!</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterWelcome;\r\n","import React, { useState } from \"react\";\r\nimport ReactAutocomplete from \"react-autocomplete\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./scss/Autocom.scss\";\r\n\r\nexport default function Autocom(props) {\r\n  const [inputs, setInputs] = useState({\r\n    food: \"\",\r\n  });\r\n\r\n  const source = sessionStorage.getItem(\"foodInfo\");\r\n  let foodList;\r\n\r\n  if (source !== undefined) {\r\n    foodList = JSON.parse(source).result.map(({ food_no, food_name }) => ({\r\n      food_no,\r\n      food_name,\r\n    }));\r\n  } else {\r\n    props.history.push(\"/\");\r\n  }\r\n\r\n  const { food } = inputs;\r\n\r\n  const onClick = () => {\r\n    console.log(food);\r\n  };\r\n\r\n  const inputProps = {\r\n    placeholder: \"Search...\",\r\n    style: {\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: 10,\r\n      borderColor: 'black',\r\n      fontSize: 13,\r\n      color: '#262626',\r\n      paddingLeft: 45,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div id=\"search-box\">\r\n      <FontAwesomeIcon icon={faSearch} />\r\n      <ReactAutocomplete\r\n        inputProps={inputProps}\r\n        items={foodList}\r\n\r\n        wrapperStyle={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          height: 50,\r\n        }}\r\n\r\n        menuStyle={{\r\n          borderRadius: '3px',\r\n          boxShadow: \"0 2px 12px rgba(0, 0, 0, 0.1)\",\r\n          background: \"rgba(255, 255, 255, 0.9)\",\r\n          boxSizing: \"border-box\",\r\n          padding: \"2px 10px\",\r\n          fontSize: \"90%\",\r\n          position: \"fixed\",\r\n          overflow: \"auto\",\r\n          minWidth: '96%',\r\n          maxHeight: \"20%\", // TODO: don't cheat, let it flow to the bottom\r\n        }}\r\n        shouldItemRender={(item, value) =>\r\n          item.food_name.toLowerCase().indexOf(value.toLowerCase()) > -1\r\n        }\r\n        getItemValue={(item) => item.food_name}\r\n        renderItem={(item, highlighted) => (\r\n          <div\r\n            key={item.food_no}\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              height: 30,\r\n              backgroundColor: highlighted ? \"#eee\" : \"transparent\",\r\n            }}\r\n          >\r\n            {item.food_name}\r\n          </div>\r\n        )}\r\n        value={inputs.food}\r\n        onChange={(e) => setInputs({ food: e.target.value })}\r\n        onSelect={(food) => setInputs({ food })}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport getFoodName from \"../getFoodName\";\r\nimport Autocom from \"../Autocom\";\r\nimport \"./scss/AnalysisResultList.scss\";\r\n\r\ntype PropsType = { result: {label: string }[] };\r\n\r\nenum Food {\r\n  bab = 21,\r\n  gaeranmali = 241,\r\n  melchi = 282,\r\n  dufu = 295,\r\n  kongnamul = 332,\r\n  musengchae = 345,\r\n  kimchi = 516,\r\n  sigumchi = 517,\r\n}\r\n\r\nfunction AnalysisResultList({ result }: PropsType) {\r\n  const [labels, setLabels] = useState<(string | number)[]>(result.map(_result => _result['label']));\r\n\r\n  const convertLabel = useCallback((list: (string | number)[]): Promise<string>[] => {\r\n    return list.map(async (label): Promise<string> => {\r\n      let foodNumber: Food | number;\r\n\r\n      foodNumber = typeof label === \"number\"\r\n        ? label\r\n        : Object.values(Food).includes(label)\r\n          ? Food[label as keyof typeof Food]\r\n          : -1;\r\n\r\n      if (foodNumber === -1) throw new Error('Unhandled food number error');\r\n\r\n      try {\r\n        return getFoodName(foodNumber);\r\n      } catch (err) {\r\n        throw new Error(`Unhandled food name error: ${err}`);\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const _labels = result.map(_result => _result['label']);\r\n    const converted = Promise.all(convertLabel(_labels));\r\n    converted.then((foodNames: string[]) => setLabels(foodNames));\r\n  }, [convertLabel, result]);\r\n\r\n  return (\r\n    <div id=\"list-wrapper\">\r\n      <Autocom />\r\n      <ul>\r\n        {labels.map((label, index) => (\r\n          <li key={index}>{label}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnalysisResultList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./scss/FoodAnalysis.scss\";\r\nimport { CircleLoader } from \"react-spinners\";\r\nimport AnalysisResultList from \"./AnalysisResultList\";\r\n\r\ntype PropsType = {\r\n  preview: JSX.Element | null,\r\n  result: {\r\n    label: string\r\n  }[] | null\r\n};\r\n\r\nenum State {\r\n  WAITING,\r\n  LOADING,\r\n  SUCCESS,\r\n  NOT_FOOD\r\n}\r\n\r\nfunction FoodAnalysis({ preview, result }: PropsType) {\r\n  const [state, setState] = useState<State>(State.WAITING);\r\n\r\n  const submitForm = () => {\r\n    setState(State.LOADING);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (result === null) {\r\n      setState(State.WAITING);\r\n    } else if (result.length === 0) {\r\n      setState(State.NOT_FOOD);\r\n    } else {\r\n      setState(State.SUCCESS);\r\n    }\r\n  }, [result]);\r\n\r\n  useEffect(() => {\r\n    setState(State.WAITING);\r\n  }, [preview]);\r\n\r\n  return preview === null ? null : (\r\n    <div className=\"submit-button-wrapper\">\r\n      <label>\r\n        {state === State.WAITING ? (\r\n          <i className=\"fas fa-arrow-right fa-2x\" />\r\n        ) : null}\r\n        <input className=\"input-file\" type=\"submit\" onClick={submitForm} />\r\n      </label>\r\n      {state === State.LOADING\r\n        ? (\r\n          <div>\r\n            <CircleLoader />\r\n          </div>\r\n        )\r\n        : state === State.SUCCESS\r\n          ? <AnalysisResultList result={result!} />\r\n          : state === State.NOT_FOOD\r\n            ? <p>음식이 아닙니다.</p>\r\n            : null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoodAnalysis;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport RegisterWelcome from \"./RegisterWelcome\";\r\nimport FoodAnalysis from \"./FoodAnalysis\";\r\nimport \"./scss/FileUpload.scss\";\r\n\r\ntype FileStateType = {\r\n  file: File | null;\r\n  previewURL: string | null;\r\n};\r\n\r\ntype PropsType = {\r\n  userNumber: number;\r\n  setUploadState: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\ntype PredictionType =\r\n  | {\r\n      label: string;\r\n    }[]\r\n  | null;\r\n\r\nfunction FileUpload({ userNumber, setUploadState }: PropsType) {\r\n  const [mouseOver, setMouseOver] = useState<boolean>(false);\r\n  const [state, setState] = useState<FileStateType>({\r\n    file: null,\r\n    previewURL: null,\r\n  });\r\n  const [preview, setPreview] = useState<JSX.Element | null>(null);\r\n  const [prediction, setPrediction] = useState<PredictionType>(null);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    if (e.target.files === null) return;\r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    if (file === undefined) {\r\n      setPreview(null);\r\n      return null;\r\n    }\r\n\r\n    reader.onloadend = () =>\r\n      setState({\r\n        file: file,\r\n        previewURL: reader.result as string,\r\n      });\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const register = useCallback((regInfo: FormData) => {\r\n    fetch(\"/file/uploads\", {\r\n      method: \"POST\",\r\n      body: regInfo,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setPrediction(data);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (\r\n    e: React.FormEvent<HTMLFormElement> & {\r\n      target: { img: { files: FileList } };\r\n    }\r\n  ) => {\r\n    setUploadState(true);\r\n\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"id\", userNumber.toString());\r\n    formData.append(\"img\", e.target.img.files[0]);\r\n\r\n    register(formData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (state.file !== null)\r\n      setPreview(\r\n        <img\r\n          className=\"preview\"\r\n          src={state.previewURL!}\r\n          alt=\"미리보기 이미지\"\r\n        />\r\n      );\r\n  }, [state]);\r\n\r\n  return (\r\n    <form\r\n      className=\"upload\"\r\n      onSubmit={handleSubmit}\r\n      encType=\"multipart/form-data\"\r\n    >\r\n      <label\r\n        onMouseOver={() => setMouseOver(true)}\r\n        onMouseOut={() => setMouseOver(false)}\r\n      >\r\n        {preview === null ? <RegisterWelcome mouseOver={mouseOver} /> : preview}\r\n        <input\r\n          className=\"input-file\"\r\n          type=\"file\"\r\n          accept=\"image/jpeg,image/png,image/jpg\"\r\n          name=\"img\"\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n      <FoodAnalysis preview={preview} result={prediction} />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport \"./scss/FoodHistory.scss\";\r\n\r\ntype PropsType = {\r\n  date: string;\r\n  imgSrc: string[];\r\n};\r\n\r\nfunction FoodImages({src}: {src: string}) {\r\n  return (\r\n    <div className=\"taken-food-container\">\r\n      <div className=\"taken-food-box\">\r\n        <img src={src} alt=\"섭취 이미지\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction FoodHistory({ date, imgSrc }: PropsType) {\r\n  return (\r\n    <div className=\"history-wrapper\">\r\n      <h2>{date.slice(0, 2)}.{date.slice(2, 4)}.{date.slice(4, 6)}.</h2>\r\n      <div className=\"history\">\r\n        {imgSrc.map((src) => <FoodImages key={src} src={src} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoodHistory;\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport FoodHistory from \"./FoodHistory\";\r\n\r\ntype UserImageListType = {\r\n  date: string;\r\n  imgSrc: string[];\r\n};\r\n\r\ntype PropsType = {\r\n  userNumber: number,\r\n  uploadState: [\r\n    boolean,\r\n    React.Dispatch<React.SetStateAction<boolean>>\r\n  ]\r\n}\r\n\r\nfunction UserFoodHistory({ userNumber, uploadState} : PropsType) {\r\n  const [userImageList, setUserImageList] = useState<UserImageListType[]>([]);\r\n\r\n  const getUserFoodHistory = useCallback(() => {\r\n    fetch(\"/file/history\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ userNumber }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    })\r\n      .then((res: Response) => res.json())\r\n      .then((data: UserImageListType[]) => setUserImageList(data.reverse()));\r\n  }, [userNumber]);\r\n\r\n  useEffect(getUserFoodHistory, [getUserFoodHistory]);\r\n\r\n  useEffect(() => {\r\n    if (uploadState[0]) {\r\n      getUserFoodHistory()\r\n    }\r\n  }, [getUserFoodHistory, uploadState]);\r\n\r\n  return (\r\n    <section className=\"register-page\">\r\n      <article className=\"history-page\">\r\n        {userImageList.length !== 0 ? (\r\n          userImageList.map(({ date, imgSrc }, index) => (\r\n            <FoodHistory key={index} date={date} imgSrc={imgSrc} />\r\n          ))\r\n        ) : (\r\n          <p>등록한 음식이 없어요.</p>\r\n        )}\r\n      </article>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default UserFoodHistory;","import React, { useMemo, useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport \"./Register.scss\";\r\nimport getUserNumber from \"../components/getUserNumber\";\r\nimport FileUpload from \"../components/Register/FileUpload\";\r\nimport UserFoodHistory from \"../components/Register/UserFoodHistory\";\r\n\r\nfunction Register() {\r\n  const userNumber = useMemo(() => getUserNumber(), []);\r\n  const [isUpload, setUploadState] = useState(false);\r\n\r\n  return (\r\n    <div className=\"register-page-container\">\r\n      <Header />\r\n      <FileUpload userNumber={userNumber} setUploadState={setUploadState} />\r\n      <UserFoodHistory\r\n        userNumber={userNumber}\r\n        uploadState={[isUpload, setUploadState]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\n//import IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction Result({ list, onRemove }) {\r\n  return (\r\n    <div>\r\n      {list.map((item, index) => (\r\n        <Item item={item} key={index} onRemove={onRemove} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nfunction Item({item,k, onRemove}){\r\n    return(\r\n        <div>\r\n          <label><b>{item}</b>\r\n          <Button id=\"remove\" \r\n          onClick ={() => onRemove(item)}>\r\n          <DeleteIcon/>\r\n        </Button> \r\n          </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result;\r\n","import React, {useEffect} from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\n\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: \"0\"\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"5\"\r\n  },\r\n  {\r\n    value: 10,\r\n    label: \"10\"\r\n  }\r\n];\r\nexport default function DiscreteSlider({setScore}) {\r\n    \r\n    \r\n    return (\r\n      <div className=\"slider\">\r\n        <Typography id=\"discrete-slider-custom\" gutterBottom>\r\n          점수를 매겨주세요\r\n        </Typography>\r\n        <Slider\r\n          defaultValue={5}\r\n          aria-labelledby=\"discrete-slider-custom\"\r\n          step={1}\r\n          max={10}\r\n          min={0}\r\n          valueLabelDisplay=\"auto\"\r\n          marks={marks}\r\n          color='primary'\r\n          onChangeCommitted={(e, value) => {\r\n            //console.log(value);\r\n            setScore(value);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  ","import React from \"react\";\r\nimport DiscreteSlider from \"./Slider\";\r\n\r\n\r\nfunction Picture({number,setScore,score}) {\r\n    \r\n\r\n    const src = `http://localhost:4002/images/${number}.png`\r\n    return( \r\n        <div className = \"bbox\">\r\n            <img id=\"picture\" src={src}/>\r\n            <DiscreteSlider setScore={setScore}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Picture;","import React, { useState, useEffect } from \"react\";\r\nimport Picture from \"./Picture\";\r\nimport getFoodName from \"./getFoodName\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nfunction number() {\r\n  const Max = 517;\r\n  return Math.round(Math.random(0, Max) * Max);\r\n}\r\n\r\nfunction Random({history}) {\r\n  const [num, setNum] = useState(number());\r\n  const [foodName, setFoodName] = useState();\r\n  const [score, setScore] = useState(5);\r\n\r\n\r\n  useEffect(() => {\r\n    getFoodName(num).then((res) => setFoodName(res));\r\n  }, [num]);\r\n  useEffect(() =>{\r\n    console.log(score);\r\n  },[score])\r\n  const onClick = () => {\r\n    setNum(number());\r\n  };\r\n  const submit=()=>{\r\n    fetch(\"/evaluate\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ userNumber : sessionStorage.getItem('number'), foodNumber: num, score:score}),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    }).then((res) => res.json())\r\n    .then((data) => {\r\n      setNum(number());\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <div id=\"box\">\r\n      <h3>2.이 음식을 좋아하시나요?</h3>\r\n      <span id=\"foodname\">{foodName}</span>\r\n      <Picture number={num} setScore={setScore} score={score} />\r\n      <Button id=\"change\" onClick={onClick}>\r\n        다른 음식\r\n      </Button>\r\n      <Button id=\"next\" onClick={submit}>\r\n        점수 매기기\r\n      </Button>\r\n      <Button\r\n        id=\"next\"\r\n        onClick={() => {\r\n          \r\n        }}>\r\n      제출하고 마치기\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Random;\r\n","import React, { useCallback, useState,useEffect } from 'react';\r\nimport Result from './Result';\r\nimport Button from '@material-ui/core/Button';\r\nimport Random from './Random';\r\nimport \"./scss/Research.scss\";\r\n\r\nfunction Research({history}) {\r\n    const [inputs, setInputs] = useState({\r\n        search: '',\r\n        isSearch:false,\r\n        list: [],\r\n        string:[],\r\n        source:[],\r\n        correct:'',\r\n    })\r\n    const {search,isSearch,list,string,source,correct} = inputs;\r\n   \r\n    useEffect(() =>{\r\n      if(list.length===0){\r\n        setInputs({\r\n          ...inputs,\r\n          search:'',\r\n          isSearch:false,\r\n        }) \r\n      }\r\n    },[list])\r\n\r\n    const onChange = useCallback(\r\n        (e) => {\r\n          const { name, value } = e.target;\r\n          setInputs({\r\n            ...inputs,\r\n            [name]: value,\r\n          });\r\n\r\n          if(value===''){\r\n            setInputs({\r\n              ...inputs,\r\n              [name]:value,\r\n              isSearch:false\r\n            })  \r\n          }\r\n          \r\n        },\r\n        [inputs]\r\n      );\r\n      const onRemove = (item) =>{\r\n          console.log(`삭제 ${item}`);\r\n          setInputs({\r\n            ...inputs,\r\n            list:list.filter(elem => elem !==item),\r\n          })\r\n        }\r\n      \r\n      const dataRemove =(item)=>{\r\n          console.log(`삭제합니다 ${item}`);\r\n\r\n\r\n          setInputs({\r\n            ...inputs,\r\n            source:source.filter(elem =>elem !==item),\r\n            string:string.filter(elem =>elem.key !==item)\r\n          })\r\n        }\r\n\r\n    const search_ingredient = () => {\r\n      console.log(search);\r\n      fetch(\"/search_ingredient\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({search:search}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          const arr=data.map(elem => elem.food_name);\r\n          //console.log('arr :' + arr);\r\n          setInputs({\r\n          ...inputs,\r\n          isSearch:true,\r\n          list:arr,\r\n          correct:search,\r\n          })\r\n          //food_name 배열 만들기 \r\n          \r\n        });\r\n\r\n    }\r\n    \r\n    \r\n\r\n    const add_ingredient = () =>{\r\n\r\n      const arr = (source.indexOf(correct)===-1)\r\n      // 이전에 검색했던 재료와 겹치지않는다면\r\n      if(list.length===0){\r\n        console.log('음식리스트가 비어있습니다');\r\n        setInputs({\r\n          ...inputs,\r\n          search:'',\r\n          isSearch:false,\r\n        })\r\n      }\r\n      else{\r\n         if(arr){\r\n          //console.log('동작');\r\n          const temp = {\r\n            key:search,\r\n            list:list.join(','),\r\n          };\r\n          console.log(temp);\r\n          setInputs({\r\n            search:'',\r\n            isSearch:false,\r\n            list:[],\r\n            string:string.concat(temp),\r\n            source:source.concat(correct),\r\n          })  \r\n        }\r\n        else{\r\n          console.log(`겹치는 재료 : ${correct}`)\r\n        }\r\n       \r\n      }\r\n      \r\n      \r\n      \r\n    }\r\n\r\n    const register = () =>{\r\n      console.log(string);\r\n      const elems = string.map(item => item.list);\r\n      console.log(elems.join(','));\r\n      fetch(\"/register\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({source:elems.join(','), user_no : sessionStorage.getItem('number')}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }).then((res) => res.json())\r\n      .then((data) => {\r\n      console.log(data);\r\n      history.push('/');\r\n      })\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n          <div className=\"page\">\r\n          <div className=\"back\">\r\n          <img src=\"/images/logo_line.png\" alt=\"팀 로고\" id = \"logo\"/>\r\n            <div className=\"QnA_Form\">\r\n              <div className=\"inbox\">\r\n            <h3>1.못먹는 재료가 있나요?</h3>\r\n            <ol>\r\n                <input name =\"search\" placeholder=\"재료를 검색하세요\" onChange={onChange} value = {search}></input>\r\n                <Button id= \"find\" \r\n                onClick = {search_ingredient} \r\n                variant=\"contained\" \r\n                color=\"primary\">\r\n                  검색</Button>\r\n\r\n                <Button id= \"add\"\r\n                onClick ={add_ingredient} \r\n                variant=\"contained\" \r\n                color=\"primary\">\r\n                  추가</Button>\r\n\r\n                <Button id = \"submit\"\r\n                onClick = {register}  \r\n                variant=\"contained\" \r\n                color=\"primary\">\r\n                  제출</Button>\r\n               \r\n               <div className=\"list\">\r\n                 {\r\n                 isSearch ===true\r\n                 ?(<label><b>{search}</b>가 포함된 음식 리스트</label>)\r\n                 : (null)\r\n               }\r\n               {\r\n                 isSearch ===true\r\n                 ? (<Result list={list} onRemove ={onRemove}/>)\r\n                 : (<Result list={source} onRemove={dataRemove}/>)\r\n               }\r\n               </div>\r\n                \r\n\r\n            </ol>\r\n              <Random/>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n     </div>\r\n    )\r\n    \r\n\r\n}\r\n\r\nexport default Research;","import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Helmet } from \"react-helmet\";\r\nimport getUserNumber from \"../components/getUserNumber\";\r\nimport \"./Statistics.scss\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nfunction Statistics(props) {\r\n  const user_name = JSON.parse(sessionStorage.getItem(\"info\"))[0].user_name;\r\n  const [states, setStates] = useState([]);\r\n  // {\r\n  //   label: [],\r\n  //   datasets: [],\r\n  // }\r\n  useEffect(() => {\r\n    const user_no = getUserNumber();\r\n\r\n    if (user_no !== -1) {\r\n      fetch(\"/userData/intake_week\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ userNumber: user_no }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        }\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          //states[0]에 열량 push\r\n          setStates([\r\n            ...states,\r\n          {\r\n            labels: [data[6].날짜,data[5].날짜,data[4].날짜,data[3].날짜,data[2].날짜,data[1].날짜,data[0].날짜],\r\n            datasets: [\r\n              {\r\n                label: '열량',\r\n                backgroundColor: 'red',\r\n                borderColor: 'rgba(0,0,0,1)',\r\n                borderWidth: 2,\r\n                data: [data[6].열량, data[5].열량, data[4].열량, data[3].열량, data[2].열량, data[1].열량, data[0].열량]\r\n              }\r\n            ]\r\n          }]);\r\n          //states[1]에 탄수화물 push\r\n          setStates([\r\n            ...states,\r\n          {\r\n            labels: [data[6].날짜,data[5].날짜,data[4].날짜,data[3].날짜,data[2].날짜,data[1].날짜,data[0].날짜],\r\n            datasets: [\r\n              {\r\n                label: '탄수화물',\r\n                backgroundColor: 'orange',\r\n                borderColor: 'rgba(0,0,0,1)',\r\n                borderWidth: 2,\r\n                data: [data[6].탄수화물, data[5].탄수화물, data[4].탄수화물, data[3].탄수화물, data[2].탄수화물, data[1].탄수화물, data[0].탄수화물]\r\n              }\r\n            ]\r\n          }]);\r\n        })\r\n    }\r\n\r\n    \r\n  }, []);\r\n\r\n\r\n  let hello = (e) => {\r\n    console.log(states);\r\n    switch(e.target.value)\r\n    {\r\n      case \"주간\":\r\n        document.getElementsByClassName('주간')[0].style.display=\"inline\"\r\n\r\n\r\n        break;\r\n      case \"월간\":\r\n        document.getElementsByClassName('주간')[0].style.display=\"none\"\r\n\r\n\r\n\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"radio-items\">\r\n\t\t    <div class=\"col-6\">\r\n\t\t\t    <input id=\"a1\" class=\"only-sr checked\" type=\"radio\" name=\"temp1\" value=\"주간\" onChange={hello}/>\r\n\t\t\t    <label for=\"a1\">주간</label>\r\n\t\t    </div>\r\n\t\t    <div class=\"col-6\">\r\n\t\t\t    <input id=\"a2\" class=\"only-sr\" type=\"radio\" name=\"temp1\" value=\"월간\" onChange={hello}/>\r\n\t\t\t    <label for=\"a2\">월간</label>\r\n\t\t    </div>\r\n\t    </div>\r\n    <div className = \"주간\">\r\n      <Bar id=\"bar\"\r\n          data={states[0]}\r\n          width={800}\r\n          height={250}\r\n          options={{\r\n            responsive: false,\r\n            title: {\r\n              display: true,\r\n              text: user_name + ' 님의 주간 통계',\r\n              fontSize: 20\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: 'top'\r\n            },\r\n            scales: { \r\n              xAxes: [{ gridLines: { display: true }, }], \r\n              yAxes: [{ gridLines: { \r\n                drawBorder: false\r\n              },\r\n                ticks: {\r\n                    display: true, \r\n                  } \r\n              }]\r\n            },\r\n            showValue: {\r\n              fontStyle: 'Helvetica',\r\n              fontSize: 20\r\n            }\r\n          }}\r\n        />\r\n        <Helmet>\r\n          <script>\r\n            document.getElementById('bar').style.display=\"inline\"\r\n          </script>\r\n        </Helmet>\r\n        <a>hi</a>\r\n        <Bar id=\"bar2\"\r\n          data={states[1]}\r\n          width={800}\r\n          height={250}\r\n          options={{\r\n            responsive: false,\r\n            title: {\r\n              display: true,\r\n              text: user_name + ' 님의 주간 통계',\r\n              fontSize: 20\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: 'top'\r\n            },\r\n            scales: { \r\n              xAxes: [{ gridLines: { display: true }, }], \r\n              yAxes: [{ gridLines: { \r\n                drawBorder: false\r\n              },\r\n                ticks: {\r\n                    display: true, \r\n                  } \r\n              }]\r\n            },\r\n            showValue: {\r\n              fontStyle: 'Helvetica',\r\n              fontSize: 20\r\n            }\r\n          }}\r\n        />\r\n        <a>hi</a>\r\n        <Helmet>\r\n          <script>\r\n            document.getElementById('bar2').style.display=\"inline\"\r\n          </script>\r\n        </Helmet>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Statistics;","import React, { useState } from \"react\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport Login from \"./components/Login\";\r\nimport \"./App.css\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport Register from \"./routes/Register\";\r\nimport Research from \"./components/Research\";\r\nimport Statistics from \"./routes/Statistics\";\r\nimport Autocom from \"./components/Autocom\";\r\n\r\nfunction App() {\r\n  const [isLogin, setLog] = useState(\r\n    Boolean(sessionStorage.getItem(\"isLogin\"))\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={props => <Home {...props} isLogin={isLogin} />}\r\n        />\r\n        <Route path=\"/SignUp\" component={SignUp} />\r\n        <Route path=\"/Research\" component={Research}/>\r\n        <Route\r\n          path=\"/Login\"\r\n          render={props => <Login {...props} setLog={setLog} />}\r\n        />\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/statistics\" component={Statistics} />\r\n        <Route path=\"/autocom\" component={Autocom}/>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}